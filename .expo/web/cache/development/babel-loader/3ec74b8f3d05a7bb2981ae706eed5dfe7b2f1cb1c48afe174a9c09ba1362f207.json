{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { BaseStyle, useTheme } from '@config';\nimport { SafeAreaView, Icon, Text } from '@components';\nimport { applicationActions } from '@actions';\nimport styles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SelectDarkOption(_ref) {\n  var navigation = _ref.navigation;\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var dispatch = useDispatch();\n  var storageForceDark = useSelector(function (state) {\n    return state.application.force_dark;\n  });\n  var _useState = useState(storageForceDark),\n    _useState2 = _slicedToArray(_useState, 2),\n    forceDarkMode = _useState2[0],\n    setForceDarkMode = _useState2[1];\n  var onChange = function onChange(forceDarkMode) {\n    dispatch(applicationActions.forceTheme(forceDarkMode));\n    navigation.goBack();\n  };\n  return _jsx(SafeAreaView, {\n    style: BaseStyle.safeAreaView,\n    edges: ['right', 'left'],\n    children: _jsx(View, {\n      style: styles.contain,\n      children: _jsxs(View, {\n        style: [styles.contentModal, {\n          backgroundColor: colors.card\n        }],\n        children: [_jsxs(View, {\n          style: {\n            padding: 8\n          },\n          children: [_jsxs(TouchableOpacity, {\n            style: [styles.item, {\n              borderBottomColor: colors.border,\n              borderBottomWidth: 1\n            }],\n            onPress: function onPress() {\n              return setForceDarkMode(null);\n            },\n            children: [_jsx(View, {\n              style: {\n                flexDirection: 'row',\n                alignItems: 'center'\n              },\n              children: _jsx(Text, {\n                body1: true,\n                style: {\n                  marginHorizontal: 8\n                },\n                children: t('dynamic_system')\n              })\n            }), forceDarkMode == null && _jsx(Icon, {\n              name: \"check\",\n              size: 18,\n              color: colors.primary\n            })]\n          }), _jsxs(TouchableOpacity, {\n            style: [styles.item, {\n              borderBottomColor: colors.border,\n              borderBottomWidth: 1\n            }],\n            onPress: function onPress() {\n              return setForceDarkMode(true);\n            },\n            children: [_jsx(View, {\n              style: {\n                flexDirection: 'row',\n                alignItems: 'center'\n              },\n              children: _jsx(Text, {\n                body1: true,\n                style: {\n                  marginHorizontal: 8\n                },\n                children: t('always_on')\n              })\n            }), forceDarkMode == true && _jsx(Icon, {\n              name: \"check\",\n              size: 18,\n              color: colors.primary\n            })]\n          }), _jsxs(TouchableOpacity, {\n            style: styles.item,\n            onPress: function onPress() {\n              return setForceDarkMode(false);\n            },\n            children: [_jsx(View, {\n              style: {\n                flexDirection: 'row',\n                alignItems: 'center'\n              },\n              children: _jsx(Text, {\n                body1: true,\n                style: {\n                  marginHorizontal: 8\n                },\n                children: t('always_off')\n              })\n            }), forceDarkMode == false && _jsx(Icon, {\n              name: \"check\",\n              size: 18,\n              color: colors.primary\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.contentAction,\n          children: [_jsx(TouchableOpacity, {\n            style: {\n              padding: 8,\n              marginHorizontal: 24\n            },\n            onPress: function onPress() {\n              return navigation.goBack();\n            },\n            children: _jsx(Text, {\n              body1: true,\n              grayColor: true,\n              children: t('cancel')\n            })\n          }), _jsx(TouchableOpacity, {\n            style: {\n              padding: 8\n            },\n            onPress: function onPress() {\n              return onChange(forceDarkMode);\n            },\n            children: _jsx(Text, {\n              body1: true,\n              primaryColor: true,\n              children: t('apply')\n            })\n          })]\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useSelector","useDispatch","View","TouchableOpacity","BaseStyle","useTheme","SafeAreaView","Icon","Text","applicationActions","styles","useTranslation","jsx","_jsx","jsxs","_jsxs","SelectDarkOption","_ref","navigation","_useTranslation","t","_useTheme","colors","dispatch","storageForceDark","state","application","force_dark","_useState","_useState2","_slicedToArray","forceDarkMode","setForceDarkMode","onChange","forceTheme","goBack","style","safeAreaView","edges","children","contain","contentModal","backgroundColor","card","padding","item","borderBottomColor","border","borderBottomWidth","onPress","flexDirection","alignItems","body1","marginHorizontal","name","size","color","primary","contentAction","grayColor","primaryColor"],"sources":["C:/Users/HP/Desktop/restwellteze2/app/screens/SelectDarkOption/index.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {View, TouchableOpacity} from 'react-native';\r\nimport {BaseStyle, useTheme} from '@config';\r\nimport {SafeAreaView, Icon, Text} from '@components';\r\nimport {applicationActions} from '@actions';\r\nimport styles from './styles';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nexport default function SelectDarkOption({navigation}) {\r\n  const {t} = useTranslation();\r\n  const {colors} = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  const storageForceDark = useSelector(state => state.application.force_dark);\r\n  const [forceDarkMode, setForceDarkMode] = useState(storageForceDark);\r\n\r\n  /**\r\n   * call when on change dark option\r\n   * @param {*} forceDarkMode\r\n   */\r\n  const onChange = forceDarkMode => {\r\n    dispatch(applicationActions.forceTheme(forceDarkMode));\r\n    navigation.goBack();\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={BaseStyle.safeAreaView} edges={['right', 'left']}>\r\n      <View style={styles.contain}>\r\n        <View style={[styles.contentModal, {backgroundColor: colors.card}]}>\r\n          <View style={{padding: 8}}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.item,\r\n                {borderBottomColor: colors.border, borderBottomWidth: 1},\r\n              ]}\r\n              onPress={() => setForceDarkMode(null)}>\r\n              <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n                <Text body1 style={{marginHorizontal: 8}}>\r\n                  {t('dynamic_system')}\r\n                </Text>\r\n              </View>\r\n              {forceDarkMode == null && (\r\n                <Icon name=\"check\" size={18} color={colors.primary} />\r\n              )}\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.item,\r\n                {borderBottomColor: colors.border, borderBottomWidth: 1},\r\n              ]}\r\n              onPress={() => setForceDarkMode(true)}>\r\n              <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n                <Text body1 style={{marginHorizontal: 8}}>\r\n                  {t('always_on')}\r\n                </Text>\r\n              </View>\r\n              {forceDarkMode == true && (\r\n                <Icon name=\"check\" size={18} color={colors.primary} />\r\n              )}\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              style={styles.item}\r\n              onPress={() => setForceDarkMode(false)}>\r\n              <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n                <Text body1 style={{marginHorizontal: 8}}>\r\n                  {t('always_off')}\r\n                </Text>\r\n              </View>\r\n              {forceDarkMode == false && (\r\n                <Icon name=\"check\" size={18} color={colors.primary} />\r\n              )}\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={styles.contentAction}>\r\n            <TouchableOpacity\r\n              style={{padding: 8, marginHorizontal: 24}}\r\n              onPress={() => navigation.goBack()}>\r\n              <Text body1 grayColor>\r\n                {t('cancel')}\r\n              </Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n              style={{padding: 8}}\r\n              onPress={() => onChange(forceDarkMode)}>\r\n              <Text body1 primaryColor>\r\n                {t('apply')}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}