{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { BaseStyle, useTheme, BaseColor } from '@config';\nimport { Header, SafeAreaView, Icon, Text, TextInput, Button } from '@components';\nimport styles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PickerScreen(_ref) {\n  var _route$params$data, _route$params$title, _route$params2;\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    search = _useState2[0],\n    setSearch = _useState2[1];\n  var _useState3 = useState((_route$params$data = route.params.data) != null ? _route$params$data : []),\n    _useState4 = _slicedToArray(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  var _useState5 = useState(route.params.selected),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selected = _useState6[0],\n    setSelected = _useState6[1];\n  var onApply = function onApply(selected) {\n    var _route$params;\n    navigation.goBack();\n    (_route$params = route.params) == null ? void 0 : _route$params.onApply(selected);\n  };\n  var onSearch = function onSearch(keyword) {\n    setSearch(keyword);\n    if (!keyword) {\n      var _route$params$data2;\n      setData((_route$params$data2 = route.params.data) != null ? _route$params$data2 : []);\n    } else {\n      setData(data.filter(function (item) {\n        return item.title.toUpperCase().includes(search.toUpperCase());\n      }));\n    }\n  };\n  var onChange = function onChange(select) {\n    setSelected(select);\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Header, {\n      title: (_route$params$title = (_route$params2 = route.params) == null ? void 0 : _route$params2.title) != null ? _route$params$title : t('location'),\n      renderLeft: function renderLeft() {\n        return _jsx(Icon, {\n          name: \"arrow-left\",\n          size: 20,\n          color: colors.primary\n        });\n      },\n      onPressLeft: function onPressLeft() {\n        navigation.goBack();\n      }\n    }), _jsx(SafeAreaView, {\n      style: BaseStyle.safeAreaView,\n      edges: ['right', 'left'],\n      children: _jsxs(View, {\n        style: styles.contain,\n        children: [_jsx(View, {\n          style: {\n            paddingHorizontal: 20,\n            paddingVertical: 15\n          },\n          children: _jsx(TextInput, {\n            onChangeText: function onChangeText(text) {\n              return onSearch(text);\n            },\n            placeholder: t('search'),\n            value: search,\n            icon: _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return onSearch('');\n              },\n              children: _jsx(Icon, {\n                name: \"times\",\n                size: 16,\n                color: BaseColor.grayColor\n              })\n            })\n          })\n        }), _jsx(FlatList, {\n          style: {\n            paddingHorizontal: 20,\n            flex: 1\n          },\n          data: data,\n          keyExtractor: function keyExtractor(item, index) {\n            return \"Picker \" + index;\n          },\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            var checked = item.id == (selected == null ? void 0 : selected.id);\n            return _jsxs(TouchableOpacity, {\n              style: [styles.item, {\n                borderBottomColor: colors.border\n              }],\n              onPress: function onPress() {\n                return onChange(item);\n              },\n              children: [_jsx(Text, {\n                body1: true,\n                style: checked ? {\n                  color: colors.primary\n                } : {},\n                children: item.title\n              }), checked && _jsx(Icon, {\n                name: \"check\",\n                size: 14,\n                color: colors.primary\n              })]\n            });\n          }\n        }), _jsx(View, {\n          style: {\n            paddingHorizontal: 20,\n            paddingVertical: 15\n          },\n          children: _jsx(Button, {\n            full: true,\n            onPress: function onPress() {\n              return onApply(selected);\n            },\n            children: t('apply')\n          })\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","FlatList","TouchableOpacity","BaseStyle","useTheme","BaseColor","Header","SafeAreaView","Icon","Text","TextInput","Button","styles","useTranslation","jsx","_jsx","jsxs","_jsxs","PickerScreen","_ref","_route$params$data","_route$params$title","_route$params2","route","navigation","_useTheme","colors","_useTranslation","t","_useState","_useState2","_slicedToArray","search","setSearch","_useState3","params","data","_useState4","setData","_useState5","selected","_useState6","setSelected","onApply","_route$params","goBack","onSearch","keyword","_route$params$data2","filter","item","title","toUpperCase","includes","onChange","select","style","flex","children","renderLeft","name","size","color","primary","onPressLeft","safeAreaView","edges","contain","paddingHorizontal","paddingVertical","onChangeText","text","placeholder","value","icon","onPress","grayColor","keyExtractor","index","renderItem","_ref2","checked","id","borderBottomColor","border","body1","full"],"sources":["C:/Users/HP/Desktop/restwellteze2/app/screens/PickerScreen/index.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {View, FlatList, TouchableOpacity} from 'react-native';\r\nimport {BaseStyle, useTheme, BaseColor} from '@config';\r\nimport {Header, SafeAreaView, Icon, Text, TextInput, Button} from '@components';\r\nimport styles from './styles';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nexport default function PickerScreen({route, navigation}) {\r\n  const {colors} = useTheme();\r\n  const {t} = useTranslation();\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [data, setData] = useState(route.params.data ?? []);\r\n  const [selected, setSelected] = useState(route.params.selected);\r\n\r\n  /**\r\n   * @description Called when apply\r\n   * @author Passion UI <passionui.com>\r\n   * @date 2019-08-03\r\n   * @param {object} select\r\n   */\r\n  const onApply = selected => {\r\n    navigation.goBack();\r\n    route.params?.onApply(selected);\r\n  };\r\n\r\n  /**\r\n   * on change keyword\r\n   *\r\n   * @param {*} keyword\r\n   */\r\n  const onSearch = keyword => {\r\n    setSearch(keyword);\r\n    if (!keyword) {\r\n      setData(route.params.data ?? []);\r\n    } else {\r\n      setData(\r\n        data.filter(item => {\r\n          return item.title.toUpperCase().includes(search.toUpperCase());\r\n        }),\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @description Called when item is selected\r\n   * @author Passion UI <passionui.com>\r\n   * @date 2019-08-03\r\n   * @param {object} select\r\n   */\r\n  const onChange = select => {\r\n    setSelected(select);\r\n  };\r\n\r\n  return (\r\n    <View style={{flex: 1}}>\r\n      <Header\r\n        title={route.params?.title ?? t('location')}\r\n        renderLeft={() => {\r\n          return <Icon name=\"arrow-left\" size={20} color={colors.primary} />;\r\n        }}\r\n        onPressLeft={() => {\r\n          navigation.goBack();\r\n        }}\r\n      />\r\n      <SafeAreaView style={BaseStyle.safeAreaView} edges={['right', 'left']}>\r\n        <View style={styles.contain}>\r\n          <View style={{paddingHorizontal: 20, paddingVertical: 15}}>\r\n            <TextInput\r\n              onChangeText={text => onSearch(text)}\r\n              placeholder={t('search')}\r\n              value={search}\r\n              icon={\r\n                <TouchableOpacity onPress={() => onSearch('')}>\r\n                  <Icon name=\"times\" size={16} color={BaseColor.grayColor} />\r\n                </TouchableOpacity>\r\n              }\r\n            />\r\n          </View>\r\n          <FlatList\r\n            style={{paddingHorizontal: 20, flex: 1}}\r\n            data={data}\r\n            keyExtractor={(item, index) => `Picker ${index}`}\r\n            renderItem={({item}) => {\r\n              const checked = item.id == selected?.id;\r\n              return (\r\n                <TouchableOpacity\r\n                  style={[styles.item, {borderBottomColor: colors.border}]}\r\n                  onPress={() => onChange(item)}>\r\n                  <Text\r\n                    body1\r\n                    style={\r\n                      checked\r\n                        ? {\r\n                            color: colors.primary,\r\n                          }\r\n                        : {}\r\n                    }>\r\n                    {item.title}\r\n                  </Text>\r\n                  {checked && (\r\n                    <Icon name=\"check\" size={14} color={colors.primary} />\r\n                  )}\r\n                </TouchableOpacity>\r\n              );\r\n            }}\r\n          />\r\n          <View style={{paddingHorizontal: 20, paddingVertical: 15}}>\r\n            <Button full onPress={() => onApply(selected)}>\r\n              {t('apply')}\r\n            </Button>\r\n          </View>\r\n        </View>\r\n      </SafeAreaView>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}