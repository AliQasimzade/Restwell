{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { BaseStyle, BaseColor, useTheme } from '@config';\nimport Swiper from 'react-native-swiper';\nimport { Image, Header, SafeAreaView, Icon, Text } from '@components';\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PreviewImage(_ref) {\n  var _route$params$gallery, _route$params;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var flatListRef = null;\n  var swiperRef = null;\n  var _useState = useState((_route$params$gallery = (_route$params = route.params) == null ? void 0 : _route$params.gallery) != null ? _route$params$gallery : []),\n    _useState2 = _slicedToArray(_useState, 2),\n    images = _useState2[0],\n    setImages = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    indexSelected = _useState4[0],\n    setIndexSelected = _useState4[1];\n  var onSelect = function onSelect(indexSelected) {\n    setIndexSelected(indexSelected);\n    setImages(images.map(function (item, index) {\n      if (index == indexSelected) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          selected: true\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          selected: false\n        });\n      }\n    }));\n    flatListRef.scrollToIndex({\n      animated: true,\n      index: indexSelected\n    });\n  };\n  var onTouchImage = function onTouchImage(touched) {\n    if (touched == indexSelected) return;\n    swiperRef.scrollBy(touched - indexSelected, false);\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'black'\n    },\n    children: [_jsx(Header, {\n      title: \"\",\n      renderLeft: function renderLeft() {\n        return _jsx(Icon, {\n          name: \"arrow-left\",\n          size: 20,\n          color: BaseColor.whiteColor\n        });\n      },\n      onPressLeft: function onPressLeft() {\n        navigation.goBack();\n      },\n      barStyle: \"light-content\"\n    }), _jsxs(SafeAreaView, {\n      style: BaseStyle.safeAreaView,\n      edges: ['right', 'left', 'bottom'],\n      children: [_jsx(Swiper, {\n        ref: function ref(_ref2) {\n          swiperRef = _ref2;\n        },\n        dotStyle: {\n          backgroundColor: BaseColor.dividerColor\n        },\n        paginationStyle: {\n          bottom: 0\n        },\n        loop: false,\n        activeDotColor: colors.primary,\n        removeClippedSubviews: false,\n        onIndexChanged: function onIndexChanged(index) {\n          return onSelect(index);\n        },\n        children: images.map(function (item, key) {\n          return _jsx(Image, {\n            style: {\n              width: '100%',\n              height: '100%'\n            },\n            resizeMode: \"contain\",\n            source: item.full\n          }, \"image\" + key);\n        })\n      }), _jsxs(View, {\n        style: {\n          paddingVertical: 10\n        },\n        children: [_jsxs(View, {\n          style: styles.lineText,\n          children: [_jsx(Text, {\n            body2: true,\n            whiteColor: true,\n            children: \"Standard Double Room\"\n          }), _jsxs(Text, {\n            body2: true,\n            whiteColor: true,\n            children: [indexSelected + 1, \"/\", images.length]\n          })]\n        }), _jsx(FlatList, {\n          ref: function ref(_ref4) {\n            flatListRef = _ref4;\n          },\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          data: images,\n          keyExtractor: function keyExtractor(item, index) {\n            return \"PreviewImage \" + index;\n          },\n          renderItem: function renderItem(_ref3) {\n            var item = _ref3.item,\n              index = _ref3.index;\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                onTouchImage(index);\n              },\n              activeOpacity: 0.9,\n              children: _jsx(Image, {\n                style: {\n                  width: 70,\n                  height: 70,\n                  marginLeft: 20,\n                  borderRadius: 8,\n                  borderColor: index == indexSelected ? colors.primaryLight : BaseColor.grayColor,\n                  borderWidth: 1\n                },\n                source: item.full\n              })\n            });\n          }\n        })]\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","FlatList","TouchableOpacity","BaseStyle","BaseColor","useTheme","Swiper","Image","Header","SafeAreaView","Icon","Text","styles","jsx","_jsx","jsxs","_jsxs","PreviewImage","_ref","_route$params$gallery","_route$params","navigation","route","_useTheme","colors","flatListRef","swiperRef","_useState","params","gallery","_useState2","_slicedToArray","images","setImages","_useState3","_useState4","indexSelected","setIndexSelected","onSelect","map","item","index","_objectSpread","selected","scrollToIndex","animated","onTouchImage","touched","scrollBy","style","flex","backgroundColor","children","title","renderLeft","name","size","color","whiteColor","onPressLeft","goBack","barStyle","safeAreaView","edges","ref","dotStyle","dividerColor","paginationStyle","bottom","loop","activeDotColor","primary","removeClippedSubviews","onIndexChanged","key","width","height","resizeMode","source","full","paddingVertical","lineText","body2","length","horizontal","showsHorizontalScrollIndicator","data","keyExtractor","renderItem","_ref3","onPress","activeOpacity","marginLeft","borderRadius","borderColor","primaryLight","grayColor","borderWidth"],"sources":["C:/Users/HP/Desktop/restwellteze2/app/screens/PreviewImage/index.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {View, FlatList, TouchableOpacity} from 'react-native';\r\nimport {BaseStyle, BaseColor, useTheme} from '@config';\r\nimport Swiper from 'react-native-swiper';\r\nimport {Image, Header, SafeAreaView, Icon, Text} from '@components';\r\nimport styles from './styles';\r\n\r\nexport default function PreviewImage({navigation, route}) {\r\n  const {colors} = useTheme();\r\n\r\n  let flatListRef = null;\r\n  let swiperRef = null;\r\n\r\n  const [images, setImages] = useState(route.params?.gallery ?? []);\r\n  const [indexSelected, setIndexSelected] = useState(0);\r\n\r\n  /**\r\n   * call when select image\r\n   *\r\n   * @param {*} indexSelected\r\n   */\r\n  const onSelect = indexSelected => {\r\n    setIndexSelected(indexSelected);\r\n    setImages(\r\n      images.map((item, index) => {\r\n        if (index == indexSelected) {\r\n          return {\r\n            ...item,\r\n            selected: true,\r\n          };\r\n        } else {\r\n          return {\r\n            ...item,\r\n            selected: false,\r\n          };\r\n        }\r\n      }),\r\n    );\r\n    flatListRef.scrollToIndex({\r\n      animated: true,\r\n      index: indexSelected,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * @description Called when image item is selected or activated\r\n   * @author RG Agency <rgagency.org>\r\n   * @date 2019-08-03\r\n   * @param {*} touched\r\n   * @returns\r\n   */\r\n  const onTouchImage = touched => {\r\n    if (touched == indexSelected) return;\r\n    swiperRef.scrollBy(touched - indexSelected, false);\r\n  };\r\n\r\n  return (\r\n    <View style={{flex: 1, backgroundColor: 'black'}}>\r\n      <Header\r\n        title=\"\"\r\n        renderLeft={() => {\r\n          return (\r\n            <Icon name=\"arrow-left\" size={20} color={BaseColor.whiteColor} />\r\n          );\r\n        }}\r\n        onPressLeft={() => {\r\n          navigation.goBack();\r\n        }}\r\n        barStyle=\"light-content\"\r\n      />\r\n      <SafeAreaView\r\n        style={BaseStyle.safeAreaView}\r\n        edges={['right', 'left', 'bottom']}>\r\n        <Swiper\r\n          ref={ref => {\r\n            swiperRef = ref;\r\n          }}\r\n          dotStyle={{\r\n            backgroundColor: BaseColor.dividerColor,\r\n          }}\r\n          paginationStyle={{bottom: 0}}\r\n          loop={false}\r\n          activeDotColor={colors.primary}\r\n          removeClippedSubviews={false}\r\n          onIndexChanged={index => onSelect(index)}>\r\n          {images.map((item, key) => {\r\n            return (\r\n              <Image\r\n                key={`image${key}`}\r\n                style={{width: '100%', height: '100%'}}\r\n                resizeMode=\"contain\"\r\n                source={item.full}\r\n              />\r\n            );\r\n          })}\r\n        </Swiper>\r\n        <View\r\n          style={{\r\n            paddingVertical: 10,\r\n          }}>\r\n          <View style={styles.lineText}>\r\n            <Text body2 whiteColor>\r\n              Standard Double Room\r\n            </Text>\r\n            <Text body2 whiteColor>\r\n              {indexSelected + 1}/{images.length}\r\n            </Text>\r\n          </View>\r\n          <FlatList\r\n            ref={ref => {\r\n              flatListRef = ref;\r\n            }}\r\n            horizontal={true}\r\n            showsHorizontalScrollIndicator={false}\r\n            data={images}\r\n            keyExtractor={(item, index) => `PreviewImage ${index}`}\r\n            renderItem={({item, index}) => (\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  onTouchImage(index);\r\n                }}\r\n                activeOpacity={0.9}>\r\n                <Image\r\n                  style={{\r\n                    width: 70,\r\n                    height: 70,\r\n                    marginLeft: 20,\r\n                    borderRadius: 8,\r\n                    borderColor:\r\n                      index == indexSelected\r\n                        ? colors.primaryLight\r\n                        : BaseColor.grayColor,\r\n                    borderWidth: 1,\r\n                  }}\r\n                  source={item.full}\r\n                />\r\n              </TouchableOpacity>\r\n            )}\r\n          />\r\n        </View>\r\n      </SafeAreaView>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}