{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BaseStyle, useTheme } from '@config';\nimport { Header, SafeAreaView, Icon, Text, Button, TextInput } from '@components';\nimport styles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\nimport { authActions } from '@actions';\nimport { designSelect } from '@selectors';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignIn(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var dispatch = useDispatch();\n  var design = useSelector(designSelect);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState('paul'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    id = _useState4[0],\n    setId = _useState4[1];\n  var _useState5 = useState('123456'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState({\n      id: true,\n      password: true\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    success = _useState8[0],\n    setSuccess = _useState8[1];\n  var onLogin = function onLogin() {\n    if (id == '' || password == '') {\n      setSuccess(_objectSpread(_objectSpread({}, success), {}, {\n        id: false,\n        password: false\n      }));\n      return;\n    }\n    var params = {\n      username: id,\n      password: password\n    };\n    setLoading(true);\n    dispatch(authActions.onLogin(params, design, function (response) {\n      if (response != null && response.success) {\n        navigation.goBack();\n        setTimeout(function () {\n          var _route$params;\n          (_route$params = route.params) == null ? void 0 : _route$params.success == null ? void 0 : _route$params.success();\n        }, 1000);\n        return;\n      }\n      Alert.alert({\n        title: t('sign_in'),\n        message: t(response == null ? void 0 : response.message)\n      });\n      setLoading(false);\n    }));\n  };\n  var offsetKeyboard = Platform.select({\n    ios: 0,\n    android: 20\n  });\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Header, {\n      title: t('sign_in'),\n      renderLeft: function renderLeft() {\n        return _jsx(Icon, {\n          name: \"arrow-left\",\n          size: 20,\n          color: colors.primary,\n          enableRTL: true\n        });\n      },\n      onPressLeft: function onPressLeft() {\n        navigation.goBack();\n      }\n    }), _jsx(SafeAreaView, {\n      style: BaseStyle.safeAreaView,\n      edges: ['right', 'left'],\n      children: _jsx(KeyboardAvoidingView, {\n        behavior: Platform.OS === 'android' ? 'height' : 'padding',\n        keyboardVerticalOffset: offsetKeyboard,\n        style: {\n          flex: 1\n        },\n        children: _jsxs(View, {\n          style: styles.contain,\n          children: [_jsx(TextInput, {\n            onChangeText: setId,\n            onFocus: function onFocus() {\n              setSuccess(_objectSpread(_objectSpread({}, success), {}, {\n                id: true\n              }));\n            },\n            placeholder: t('input_id'),\n            success: success.id,\n            value: id\n          }), _jsx(TextInput, {\n            style: {\n              marginTop: 10\n            },\n            onChangeText: setPassword,\n            onFocus: function onFocus() {\n              setSuccess(_objectSpread(_objectSpread({}, success), {}, {\n                password: true\n              }));\n            },\n            placeholder: t('input_password'),\n            secureTextEntry: true,\n            success: success.password,\n            value: password\n          }), _jsx(Button, {\n            style: {\n              marginTop: 20\n            },\n            full: true,\n            loading: loading,\n            onPress: onLogin,\n            children: t('sign_in')\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate('ResetPassword');\n            },\n            children: _jsx(Text, {\n              body1: true,\n              grayColor: true,\n              style: {\n                marginTop: 25\n              },\n              children: t('forgot_your_password')\n            })\n          })]\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","TouchableOpacity","KeyboardAvoidingView","Platform","Alert","useDispatch","useSelector","BaseStyle","useTheme","Header","SafeAreaView","Icon","Text","Button","TextInput","styles","useTranslation","authActions","designSelect","jsx","_jsx","jsxs","_jsxs","SignIn","_ref","navigation","route","_useTheme","colors","_useTranslation","t","dispatch","design","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","id","setId","_useState5","_useState6","password","setPassword","_useState7","_useState8","success","setSuccess","onLogin","_objectSpread","params","username","response","goBack","setTimeout","_route$params","alert","title","message","offsetKeyboard","select","ios","android","style","flex","children","renderLeft","name","size","color","primary","enableRTL","onPressLeft","safeAreaView","edges","behavior","OS","keyboardVerticalOffset","contain","onChangeText","onFocus","placeholder","value","marginTop","secureTextEntry","full","onPress","navigate","body1","grayColor"],"sources":["C:/Users/HP/Desktop/restwellteze2/app/screens/SignIn/index.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  Alert,\r\n} from 'react-native';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {BaseStyle, useTheme} from '@config';\r\nimport {Header, SafeAreaView, Icon, Text, Button, TextInput} from '@components';\r\nimport styles from './styles';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {authActions} from '@actions';\r\nimport {designSelect} from '@selectors';\r\n\r\nexport default function SignIn({navigation, route}) {\r\n  const {colors} = useTheme();\r\n  const {t} = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const design = useSelector(designSelect);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [id, setId] = useState('paul');\r\n  const [password, setPassword] = useState('123456');\r\n  const [success, setSuccess] = useState({id: true, password: true});\r\n\r\n  /**\r\n   * call when action onLogin\r\n   */\r\n  const onLogin = () => {\r\n    if (id == '' || password == '') {\r\n      setSuccess({\r\n        ...success,\r\n        id: false,\r\n        password: false,\r\n      });\r\n      return;\r\n    }\r\n    const params = {\r\n      username: id,\r\n      password,\r\n    };\r\n    setLoading(true);\r\n    dispatch(\r\n      authActions.onLogin(params, design, response => {\r\n        if (response?.success) {\r\n          navigation.goBack();\r\n          setTimeout(() => {\r\n            route.params?.success?.();\r\n          }, 1000);\r\n          return;\r\n        }\r\n        Alert.alert({title: t('sign_in'), message: t(response?.message)});\r\n        setLoading(false);\r\n      }),\r\n    );\r\n  };\r\n\r\n  const offsetKeyboard = Platform.select({\r\n    ios: 0,\r\n    android: 20,\r\n  });\r\n\r\n  return (\r\n    <View style={{flex: 1}}>\r\n      <Header\r\n        title={t('sign_in')}\r\n        renderLeft={() => {\r\n          return (\r\n            <Icon\r\n              name=\"arrow-left\"\r\n              size={20}\r\n              color={colors.primary}\r\n              enableRTL={true}\r\n            />\r\n          );\r\n        }}\r\n        onPressLeft={() => {\r\n          navigation.goBack();\r\n        }}\r\n      />\r\n      <SafeAreaView style={BaseStyle.safeAreaView} edges={['right', 'left']}>\r\n        <KeyboardAvoidingView\r\n          behavior={Platform.OS === 'android' ? 'height' : 'padding'}\r\n          keyboardVerticalOffset={offsetKeyboard}\r\n          style={{flex: 1}}>\r\n          <View style={styles.contain}>\r\n            <TextInput\r\n              onChangeText={setId}\r\n              onFocus={() => {\r\n                setSuccess({\r\n                  ...success,\r\n                  id: true,\r\n                });\r\n              }}\r\n              placeholder={t('input_id')}\r\n              success={success.id}\r\n              value={id}\r\n            />\r\n            <TextInput\r\n              style={{marginTop: 10}}\r\n              onChangeText={setPassword}\r\n              onFocus={() => {\r\n                setSuccess({\r\n                  ...success,\r\n                  password: true,\r\n                });\r\n              }}\r\n              placeholder={t('input_password')}\r\n              secureTextEntry={true}\r\n              success={success.password}\r\n              value={password}\r\n            />\r\n            <Button\r\n              style={{marginTop: 20}}\r\n              full\r\n              loading={loading}\r\n              onPress={onLogin}>\r\n              {t('sign_in')}\r\n            </Button>\r\n            <TouchableOpacity\r\n              onPress={() => navigation.navigate('ResetPassword')}>\r\n              <Text body1 grayColor style={{marginTop: 25}}>\r\n                {t('forgot_your_password')}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </KeyboardAvoidingView>\r\n      </SafeAreaView>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}