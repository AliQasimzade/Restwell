{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { BaseStyle, useTheme, FontSupport, DefaultFont } from '@config';\nimport { SafeAreaView, Icon, Text } from '@components';\nimport { applicationActions } from '@actions';\nimport styles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SelectFontOption(_ref) {\n  var navigation = _ref.navigation;\n  var storageFont = useSelector(function (state) {\n    return state.application.font;\n  });\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var dispatch = useDispatch();\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var _useState = useState(storageFont != null ? storageFont : DefaultFont),\n    _useState2 = _slicedToArray(_useState, 2),\n    font = _useState2[0],\n    setFont = _useState2[1];\n  var onChange = function onChange(font) {\n    dispatch(applicationActions.changeFont(font));\n    navigation.goBack();\n  };\n  return _jsx(SafeAreaView, {\n    style: BaseStyle.safeAreaView,\n    edges: ['right', 'left'],\n    children: _jsx(View, {\n      style: styles.contain,\n      children: _jsxs(View, {\n        style: [styles.contentModal, {\n          backgroundColor: colors.card\n        }],\n        children: [_jsx(View, {\n          style: {\n            padding: 8\n          },\n          children: FontSupport.map(function (item, index) {\n            return _jsxs(TouchableOpacity, {\n              style: [styles.item, {\n                borderBottomColor: colors.border,\n                borderBottomWidth: index == FontSupport.length - 1 ? 0 : 1\n              }],\n              onPress: function onPress() {\n                return setFont(item);\n              },\n              children: [_jsx(View, {\n                style: {\n                  flexDirection: 'row',\n                  alignItems: 'center'\n                },\n                children: _jsx(Text, {\n                  body1: true,\n                  style: {\n                    marginHorizontal: 8\n                  },\n                  children: item\n                })\n              }), item == font && _jsx(Icon, {\n                name: \"check\",\n                size: 18,\n                color: colors.primary\n              })]\n            }, item);\n          })\n        }), _jsxs(View, {\n          style: styles.contentAction,\n          children: [_jsx(TouchableOpacity, {\n            style: {\n              padding: 8,\n              marginHorizontal: 24\n            },\n            onPress: function onPress() {\n              return navigation.goBack();\n            },\n            children: _jsx(Text, {\n              body1: true,\n              grayColor: true,\n              children: t('cancel')\n            })\n          }), _jsx(TouchableOpacity, {\n            style: {\n              padding: 8\n            },\n            onPress: function onPress() {\n              return onChange(font);\n            },\n            children: _jsx(Text, {\n              body1: true,\n              primaryColor: true,\n              children: t('apply')\n            })\n          })]\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useSelector","useDispatch","View","TouchableOpacity","BaseStyle","useTheme","FontSupport","DefaultFont","SafeAreaView","Icon","Text","applicationActions","styles","useTranslation","jsx","_jsx","jsxs","_jsxs","SelectFontOption","_ref","navigation","storageFont","state","application","font","_useTheme","colors","dispatch","_useTranslation","t","_useState","_useState2","_slicedToArray","setFont","onChange","changeFont","goBack","style","safeAreaView","edges","children","contain","contentModal","backgroundColor","card","padding","map","item","index","borderBottomColor","border","borderBottomWidth","length","onPress","flexDirection","alignItems","body1","marginHorizontal","name","size","color","primary","contentAction","grayColor","primaryColor"],"sources":["C:/Users/HP/Desktop/restwellteze2/app/screens/SelectFontOption/index.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {View, TouchableOpacity} from 'react-native';\r\nimport {BaseStyle, useTheme, FontSupport, DefaultFont} from '@config';\r\nimport {SafeAreaView, Icon, Text} from '@components';\r\nimport {applicationActions} from '@actions';\r\nimport styles from './styles';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nexport default function SelectFontOption({navigation}) {\r\n  const storageFont = useSelector(state => state.application.font);\r\n  const {colors} = useTheme();\r\n  const dispatch = useDispatch();\r\n  const {t} = useTranslation();\r\n\r\n  const [font, setFont] = useState(storageFont ?? DefaultFont);\r\n\r\n  const onChange = font => {\r\n    dispatch(applicationActions.changeFont(font));\r\n    navigation.goBack();\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={BaseStyle.safeAreaView} edges={['right', 'left']}>\r\n      <View style={styles.contain}>\r\n        <View style={[styles.contentModal, {backgroundColor: colors.card}]}>\r\n          <View style={{padding: 8}}>\r\n            {FontSupport.map((item, index) => {\r\n              return (\r\n                <TouchableOpacity\r\n                  key={item}\r\n                  style={[\r\n                    styles.item,\r\n                    {\r\n                      borderBottomColor: colors.border,\r\n                      borderBottomWidth:\r\n                        index == FontSupport.length - 1 ? 0 : 1,\r\n                    },\r\n                  ]}\r\n                  onPress={() => setFont(item)}>\r\n                  <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n                    <Text body1 style={{marginHorizontal: 8}}>\r\n                      {item}\r\n                    </Text>\r\n                  </View>\r\n                  {item == font && (\r\n                    <Icon name=\"check\" size={18} color={colors.primary} />\r\n                  )}\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          <View style={styles.contentAction}>\r\n            <TouchableOpacity\r\n              style={{padding: 8, marginHorizontal: 24}}\r\n              onPress={() => navigation.goBack()}>\r\n              <Text body1 grayColor>\r\n                {t('cancel')}\r\n              </Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n              style={{padding: 8}}\r\n              onPress={() => onChange(font)}>\r\n              <Text body1 primaryColor>\r\n                {t('apply')}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}