{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { Text, Icon } from '@components';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport { useTheme, BaseColor } from '@config';\nimport { useTranslation } from 'react-i18next';\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Alert(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var _route$params = route == null ? void 0 : route.params,\n    title = _route$params.title,\n    message = _route$params.message,\n    action = _route$params.action,\n    option = _route$params.option,\n    type = _route$params.type;\n  var success = type === 'success';\n  useEffect(function () {\n    var backHandler = BackHandler.addEventListener('hardwareBackPress', function () {\n      return !(option != null && option.cancelable);\n    });\n    return function () {\n      return backHandler.remove();\n    };\n  }, [option == null ? void 0 : option.cancelable]);\n  var renderButtonFirst = function renderButtonFirst() {\n    var _action$0$text, _action$, _action$2;\n    var firstTitle = (_action$0$text = action == null ? void 0 : (_action$ = action[0]) == null ? void 0 : _action$.text) != null ? _action$0$text : t('close');\n    var _onPress = action == null ? void 0 : (_action$2 = action[0]) == null ? void 0 : _action$2.onPress;\n    return _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        _onPress == null ? void 0 : _onPress();\n        if (option != null && option.cancelable) navigation.goBack();\n      },\n      children: _jsx(Text, {\n        body2: true,\n        semibold: true,\n        children: firstTitle\n      })\n    });\n  };\n  var renderButtonSecond = function renderButtonSecond() {\n    var _action$3, _action$4;\n    var secondTitle = action == null ? void 0 : (_action$3 = action[1]) == null ? void 0 : _action$3.text;\n    var _onPress2 = action == null ? void 0 : (_action$4 = action[1]) == null ? void 0 : _action$4.onPress;\n    if (title && _onPress2) {\n      return _jsx(TouchableOpacity, {\n        style: [styles.button, {\n          borderLeftColor: colors.border,\n          borderLeftWidth: 0.5\n        }],\n        onPress: function onPress() {\n          _onPress2 == null ? void 0 : _onPress2();\n          if (option != null && option.cancelable) navigation.goBack();\n        },\n        children: _jsx(Text, {\n          body2: true,\n          semibold: true,\n          children: secondTitle\n        })\n      });\n    }\n  };\n  return _jsx(View, {\n    style: styles.contain,\n    children: _jsxs(View, {\n      style: [styles.content, {\n        backgroundColor: colors.card\n      }],\n      children: [_jsx(View, {\n        style: [styles.contentIcon, {\n          backgroundColor: success ? BaseColor.greenColor : colors.primary\n        }],\n        children: _jsx(Icon, {\n          name: success ? 'check-circle' : 'exclamation-triangle',\n          size: 28,\n          color: BaseColor.whiteColor\n        })\n      }), _jsxs(View, {\n        style: {\n          padding: 8,\n          alignItems: 'center'\n        },\n        children: [_jsx(Text, {\n          title3: true,\n          medium: true,\n          children: title\n        }), _jsx(Text, {\n          body2: true,\n          medium: true,\n          style: styles.message,\n          children: message\n        })]\n      }), _jsxs(View, {\n        style: [styles.contentButton, {\n          borderTopColor: colors.border\n        }],\n        children: [renderButtonFirst(), renderButtonSecond()]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","Text","Icon","TouchableOpacity","View","BackHandler","useTheme","BaseColor","useTranslation","styles","jsx","_jsx","jsxs","_jsxs","Alert","_ref","route","navigation","_useTheme","colors","_useTranslation","t","_route$params","params","title","message","action","option","type","success","backHandler","addEventListener","cancelable","remove","renderButtonFirst","_action$0$text","_action$","_action$2","firstTitle","text","onPress","style","button","goBack","children","body2","semibold","renderButtonSecond","_action$3","_action$4","secondTitle","borderLeftColor","border","borderLeftWidth","contain","content","backgroundColor","card","contentIcon","greenColor","primary","name","size","color","whiteColor","padding","alignItems","title3","medium","contentButton","borderTopColor"],"sources":["C:/Users/HP/Desktop/restwellteze2/app/screens/Alert/index.js"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport {Text, Icon} from '@components';\r\nimport {TouchableOpacity, View, BackHandler} from 'react-native';\r\nimport {useTheme, BaseColor} from '@config';\r\nimport {useTranslation} from 'react-i18next';\r\nimport styles from './styles';\r\n\r\nexport default function Alert({route, navigation}) {\r\n  const {colors} = useTheme();\r\n  const {t} = useTranslation();\r\n  const {title, message, action, option, type} = route?.params;\r\n  const success = type === 'success';\r\n\r\n  useEffect(() => {\r\n    const backHandler = BackHandler.addEventListener(\r\n      'hardwareBackPress',\r\n      () => !option?.cancelable,\r\n    );\r\n\r\n    return () => backHandler.remove();\r\n  }, [option?.cancelable]);\r\n\r\n  const renderButtonFirst = () => {\r\n    const firstTitle = action?.[0]?.text ?? t('close');\r\n    const onPress = action?.[0]?.onPress;\r\n    return (\r\n      <TouchableOpacity\r\n        style={styles.button}\r\n        onPress={() => {\r\n          onPress?.();\r\n          if (option?.cancelable) navigation.goBack();\r\n        }}>\r\n        <Text body2 semibold>\r\n          {firstTitle}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  const renderButtonSecond = () => {\r\n    const secondTitle = action?.[1]?.text;\r\n    const onPress = action?.[1]?.onPress;\r\n    if (title && onPress) {\r\n      return (\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.button,\r\n            {\r\n              borderLeftColor: colors.border,\r\n              borderLeftWidth: 0.5,\r\n            },\r\n          ]}\r\n          onPress={() => {\r\n            onPress?.();\r\n            if (option?.cancelable) navigation.goBack();\r\n          }}>\r\n          <Text body2 semibold>\r\n            {secondTitle}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.contain}>\r\n      <View style={[styles.content, {backgroundColor: colors.card}]}>\r\n        <View\r\n          style={[\r\n            styles.contentIcon,\r\n            {backgroundColor: success ? BaseColor.greenColor : colors.primary},\r\n          ]}>\r\n          <Icon\r\n            name={success ? 'check-circle' : 'exclamation-triangle'}\r\n            size={28}\r\n            color={BaseColor.whiteColor}\r\n          />\r\n        </View>\r\n        <View style={{padding: 8, alignItems: 'center'}}>\r\n          <Text title3 medium>\r\n            {title}\r\n          </Text>\r\n          <Text body2 medium style={styles.message}>\r\n            {message}\r\n          </Text>\r\n        </View>\r\n        <View style={[styles.contentButton, {borderTopColor: colors.border}]}>\r\n          {renderButtonFirst()}\r\n          {renderButtonSecond()}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}