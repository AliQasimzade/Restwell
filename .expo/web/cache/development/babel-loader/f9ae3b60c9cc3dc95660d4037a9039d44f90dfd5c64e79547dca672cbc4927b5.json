{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { BaseStyle, useTheme } from '@config';\nimport { Header, SafeAreaView, Icon, TextInput, Button } from '@components';\nimport { useTranslation } from 'react-i18next';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ResetPassword(_ref) {\n  var navigation = _ref.navigation;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var offsetKeyboard = Platform.select({\n    ios: 0,\n    android: 20\n  });\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    seteEmail = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState({\n      email: true\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    success = _useState6[0],\n    setSuccess = _useState6[1];\n  var onReset = function onReset() {\n    if (email == '') {\n      setSuccess(_objectSpread(_objectSpread({}, success), {}, {\n        email: false\n      }));\n    } else {\n      setLoading(true);\n      setTimeout(function () {\n        setLoading(false);\n        navigation.navigate('SignIn');\n      }, 500);\n    }\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Header, {\n      title: t('reset_password'),\n      renderLeft: function renderLeft() {\n        return _jsx(Icon, {\n          name: \"arrow-left\",\n          size: 20,\n          color: colors.primary,\n          enableRTL: true\n        });\n      },\n      onPressLeft: function onPressLeft() {\n        navigation.goBack();\n      }\n    }), _jsx(SafeAreaView, {\n      style: BaseStyle.safeAreaView,\n      edges: ['right', 'left'],\n      children: _jsx(KeyboardAvoidingView, {\n        behavior: Platform.OS === 'android' ? 'height' : 'padding',\n        keyboardVerticalOffset: offsetKeyboard,\n        style: {\n          flex: 1\n        },\n        children: _jsxs(View, {\n          style: {\n            flex: 1,\n            padding: 20,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: [_jsx(TextInput, {\n            onChangeText: function onChangeText(text) {\n              return seteEmail(text);\n            },\n            onFocus: function onFocus() {\n              setSuccess(_objectSpread(_objectSpread({}, success), {}, {\n                email: true\n              }));\n            },\n            placeholder: t('email_address'),\n            success: success.email,\n            value: email,\n            selectionColor: colors.primary\n          }), _jsx(Button, {\n            style: {\n              marginTop: 20\n            },\n            full: true,\n            onPress: function onPress() {\n              onReset();\n            },\n            loading: loading,\n            children: t('reset_password')\n          })]\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","KeyboardAvoidingView","Platform","BaseStyle","useTheme","Header","SafeAreaView","Icon","TextInput","Button","useTranslation","jsx","_jsx","jsxs","_jsxs","ResetPassword","_ref","navigation","_useTheme","colors","_useTranslation","t","offsetKeyboard","select","ios","android","_useState","_useState2","_slicedToArray","email","seteEmail","_useState3","_useState4","loading","setLoading","_useState5","_useState6","success","setSuccess","onReset","_objectSpread","setTimeout","navigate","style","flex","children","title","renderLeft","name","size","color","primary","enableRTL","onPressLeft","goBack","safeAreaView","edges","behavior","OS","keyboardVerticalOffset","padding","justifyContent","alignItems","onChangeText","text","onFocus","placeholder","value","selectionColor","marginTop","full","onPress"],"sources":["C:/Users/HP/Desktop/restwellteze2/app/screens/ResetPassword/index.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {View, KeyboardAvoidingView, Platform} from 'react-native';\r\nimport {BaseStyle, useTheme} from '@config';\r\nimport {Header, SafeAreaView, Icon, TextInput, Button} from '@components';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nexport default function ResetPassword({navigation}) {\r\n  const {colors} = useTheme();\r\n  const {t} = useTranslation();\r\n  const offsetKeyboard = Platform.select({\r\n    ios: 0,\r\n    android: 20,\r\n  });\r\n  const [email, seteEmail] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState({email: true});\r\n\r\n  /**\r\n   * call when action reset pass\r\n   */\r\n  const onReset = () => {\r\n    if (email == '') {\r\n      setSuccess({\r\n        ...success,\r\n        email: false,\r\n      });\r\n    } else {\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n        navigation.navigate('SignIn');\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{flex: 1}}>\r\n      <Header\r\n        title={t('reset_password')}\r\n        renderLeft={() => {\r\n          return (\r\n            <Icon\r\n              name=\"arrow-left\"\r\n              size={20}\r\n              color={colors.primary}\r\n              enableRTL={true}\r\n            />\r\n          );\r\n        }}\r\n        onPressLeft={() => {\r\n          navigation.goBack();\r\n        }}\r\n      />\r\n      <SafeAreaView style={BaseStyle.safeAreaView} edges={['right', 'left']}>\r\n        <KeyboardAvoidingView\r\n          behavior={Platform.OS === 'android' ? 'height' : 'padding'}\r\n          keyboardVerticalOffset={offsetKeyboard}\r\n          style={{flex: 1}}>\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              padding: 20,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}>\r\n            <TextInput\r\n              onChangeText={text => seteEmail(text)}\r\n              onFocus={() => {\r\n                setSuccess({\r\n                  ...success,\r\n                  email: true,\r\n                });\r\n              }}\r\n              placeholder={t('email_address')}\r\n              success={success.email}\r\n              value={email}\r\n              selectionColor={colors.primary}\r\n            />\r\n            <Button\r\n              style={{marginTop: 20}}\r\n              full\r\n              onPress={() => {\r\n                onReset();\r\n              }}\r\n              loading={loading}>\r\n              {t('reset_password')}\r\n            </Button>\r\n          </View>\r\n        </KeyboardAvoidingView>\r\n      </SafeAreaView>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}